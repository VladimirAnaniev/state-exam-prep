; Дадени са непразен списък от едноместни числови функции flи непразен списък от числа xl. 
; Казваме, че числото xе “неподвижна точка” на функцията f, ако f(x)= x. 
; 
; Да се попълнят по подходящ начин празните полета по-долу така, че за всички функции от fl, 
; които имат неподвижна точка сред числата в xl, функцията sumMinFix да намира 
; сумата на най-малките им такива неподвижни точки. 
; 
; Ако никоя функция от flняма неподвижна точка сред числата в xl, 
; функцията sumMinFixда връща числото 0. Помощната функция addDefault служи да осигури, 
; че ако подаденият ѝ списък е празен, то в него се добавя една стойност по подразбиране.
; 
; Упътване:
; можете да използвате наготово функциите apply, filter, foldr, map, min, minimum, 
; както и всички стандартни функции в R5RS за Scheme и Prelude за Haskell.


(define (addDefault val l)
    (if (null? l) (list val) l))
    
(define (sumMinFix fl xl)
    (apply +
        (map
            (lambda (f)
                (apply min
                    (addDefault 0
                        (filter
                            (lambda (x) (= x (f x))) xl)))) fl)))